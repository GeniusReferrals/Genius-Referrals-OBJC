//
//  RedemptionRequestsController.h
//  GeniusReferrals
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/17/2017
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "RedemptionRequestForm.h"

@interface RedemptionRequestsController : BaseController

/**
* Completion block definition for asynchronous call to Get Redemption Request Status */
typedef void (^CompletedGetRedemptionRequestStatus)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get a redemption request status.
* @param    redemptionRequestStatusSlug    Required parameter: The redemption request status identifier
*/
- (void) getRedemptionRequestStatusAsyncWithRedemptionRequestStatusSlug:(NSString*) redemptionRequestStatusSlug
                completionBlock:(CompletedGetRedemptionRequestStatus) onCompleted;

/**
* Completion block definition for asynchronous call to Get Redemption Request Statuses */
typedef void (^CompletedGetRedemptionRequestStatuses)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get redemption request statuses.
*/
- (void) getRedemptionRequestStatusesWithCompletionBlock:(CompletedGetRedemptionRequestStatuses) onCompleted;

/**
* Completion block definition for asynchronous call to Get Redemption Request Action */
typedef void (^CompletedGetRedemptionRequestAction)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get a redemption request action.
* @param    redemptionRequestActionSlug    Required parameter: The redemption request action identifier
*/
- (void) getRedemptionRequestActionAsyncWithRedemptionRequestActionSlug:(NSString*) redemptionRequestActionSlug
                completionBlock:(CompletedGetRedemptionRequestAction) onCompleted;

/**
* Completion block definition for asynchronous call to Get Redemption Request Actions */
typedef void (^CompletedGetRedemptionRequestActions)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get redemption request actions.
*/
- (void) getRedemptionRequestActionsWithCompletionBlock:(CompletedGetRedemptionRequestActions) onCompleted;

/**
* Completion block definition for asynchronous call to Patch Redemption Request */
typedef void (^CompletedPatchRedemptionRequest)(BOOL success, HttpContext* context, NSError* error);

/**
* Redeem a redemption request. After the redemption request is created it needs to be redeemed. This will deduct the amount of the advocate unclaimed balance and move the request to the completed state.
* @param    accountSlug    Required parameter: The account identifier
* @param    redemptionRequestId    Required parameter: The redemption request id
*/
- (void) patchRedemptionRequestAsyncWithAccountSlug:(NSString*) accountSlug
                redemptionRequestId:(int) redemptionRequestId
                completionBlock:(CompletedPatchRedemptionRequest) onCompleted;

/**
* Completion block definition for asynchronous call to Post Redemption Request */
typedef void (^CompletedPostRedemptionRequest)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Create a redemption request.
* @param    accountSlug    Required parameter: The account identifier
* @param    redemptionRequestForm    Required parameter: The body of the request
*/
- (void) postRedemptionRequestAsyncWithAccountSlug:(NSString*) accountSlug
                redemptionRequestForm:(RedemptionRequestForm*) redemptionRequestForm
                completionBlock:(CompletedPostRedemptionRequest) onCompleted;

/**
* Completion block definition for asynchronous call to Get Redemption Request */
typedef void (^CompletedGetRedemptionRequest)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get a redemption request by a given id.
* @param    accountSlug    Required parameter: The account identifier
* @param    redemptionRequestId    Required parameter: The redemption request identifier
*/
- (void) getRedemptionRequestAsyncWithAccountSlug:(NSString*) accountSlug
                redemptionRequestId:(NSString*) redemptionRequestId
                completionBlock:(CompletedGetRedemptionRequest) onCompleted;

/**
* Completion block definition for asynchronous call to Get Redemption Requests */
typedef void (^CompletedGetRedemptionRequests)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get the list of redemption requests.
* @param    accountSlug    Required parameter: The account identifier
* @param    page    Optional parameter: Page number, e.g. 1 would start at the first result, and 10 would start at the tenth result.
* @param    limit    Optional parameter: Maximum number of results to return in the response. Default (10), threshold (100)
* @param    filter    Optional parameter: Allowed fields: redemption_request_id, name, lastname, email, request_status_slug, request_action_slug, from, to, created. Use the following delimiters to build your filters params. The vertical bar ('\|') to separate individual filter phrases and a double colon ('::') to separate the names and values. The delimiter of the double colon (':') separates the property name from the comparison value, enabling the comparison value to contain spaces. Example: www.example.com/users?filter='name::todd\|city::denver\|title::grand poobah'
* @param    sort    Optional parameter: Allowed fields: name, lastname, email, created. Use sort query-string parameter that contains a delimited set of property names. For each property name, sort in ascending order, and for each property prefixed with a dash ('-') sort in descending order. Separate each property name with a vertical bar ('\|'), which is consistent with the separation of the name\|value pairs in filtering, above. For example, if we want to retrieve users in order of their last name (ascending), first name (ascending) and hire date (descending), the request might look like this www.example.com/users?sort='last_name\|first_name\|-hire_date'
*/
- (void) getRedemptionRequestsAsyncWithAccountSlug:(NSString*) accountSlug
                page:(NSString*) page
                limit:(NSString*) limit
                filter:(NSString*) filter
                sort:(NSString*) sort
                completionBlock:(CompletedGetRedemptionRequests) onCompleted;

@end