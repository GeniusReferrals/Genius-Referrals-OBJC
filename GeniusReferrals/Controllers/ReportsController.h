//
//  ReportsController.h
//  GeniusReferrals
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/17/2017
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NSDate+extension.h"

@interface ReportsController : BaseController

/**
* Completion block definition for asynchronous call to Get Referrals Summary Per Origin */
typedef void (^CompletedGetReferralsSummaryPerOrigin)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get referrals summary per referral origin.
* @param    advocateToken    Required parameter: The advocate's token
*/
- (void) getReferralsSummaryPerOriginAsyncWithAdvocateToken:(NSString*) advocateToken
                completionBlock:(CompletedGetReferralsSummaryPerOrigin) onCompleted;

/**
* Completion block definition for asynchronous call to Get Bonuses Summary Per Origin */
typedef void (^CompletedGetBonusesSummaryPerOrigin)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get bonuses summary per referral origin.
* @param    advocateToken    Required parameter: The advocate's token
*/
- (void) getBonusesSummaryPerOriginAsyncWithAdvocateToken:(NSString*) advocateToken
                completionBlock:(CompletedGetBonusesSummaryPerOrigin) onCompleted;

/**
* Completion block definition for asynchronous call to Get Top Advocates */
typedef void (^CompletedGetTopAdvocates)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get top 10 advocates.
* @param    accountSlug    Optional parameter: The account identifier
* @param    campaignSlug    Optional parameter: The campaign identifier
* @param    limit    Optional parameter: Maximum number of results to return in the response. Default (10)
* @param    from    Optional parameter: The datetime were the range of the search starts
* @param    to    Optional parameter: The datetime were the range of the search stops
*/
- (void) getTopAdvocatesAsyncWithAccountSlug:(NSString*) accountSlug
                campaignSlug:(NSString*) campaignSlug
                limit:(NSNumber*) limit
                from:(NSDate*) from
                to:(NSDate*) to
                completionBlock:(CompletedGetTopAdvocates) onCompleted;

/**
* Completion block definition for asynchronous call to Get Share Daily Participation */
typedef void (^CompletedGetShareDailyParticipation)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get share daily participation.
* @param    accountSlug    Optional parameter: The account identifier
* @param    campaignSlug    Optional parameter: The campaign identifier
* @param    advocateToken    Optional parameter: The advocate's token
* @param    from    Optional parameter: The datetime were the range of the search starts
* @param    to    Optional parameter: The datetime were the range of the search stops
*/
- (void) getShareDailyParticipationAsyncWithAccountSlug:(NSString*) accountSlug
                campaignSlug:(NSString*) campaignSlug
                advocateToken:(NSString*) advocateToken
                from:(NSDate*) from
                to:(NSDate*) to
                completionBlock:(CompletedGetShareDailyParticipation) onCompleted;

/**
* Completion block definition for asynchronous call to Get Referral Daily Participation */
typedef void (^CompletedGetReferralDailyParticipation)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get referral daily participation.
* @param    accountSlug    Optional parameter: The account identifier
* @param    campaignSlug    Optional parameter: The campaign identifier
* @param    advocateToken    Optional parameter: The advocate's token
* @param    from    Optional parameter: The datetime were the range of the search starts
* @param    to    Optional parameter: The datetime were the range of the search stops
*/
- (void) getReferralDailyParticipationAsyncWithAccountSlug:(NSString*) accountSlug
                campaignSlug:(NSString*) campaignSlug
                advocateToken:(NSString*) advocateToken
                from:(NSDate*) from
                to:(NSDate*) to
                completionBlock:(CompletedGetReferralDailyParticipation) onCompleted;

/**
* Completion block definition for asynchronous call to Get Click Daily Participation */
typedef void (^CompletedGetClickDailyParticipation)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get click daily participation.
* @param    accountSlug    Optional parameter: The account identifier
* @param    campaignSlug    Optional parameter: The campaign identifier
* @param    advocateToken    Optional parameter: The advocate's token
* @param    from    Optional parameter: The datetime were the range of the search starts
* @param    to    Optional parameter: The datetime were the range of the search stops
*/
- (void) getClickDailyParticipationAsyncWithAccountSlug:(NSString*) accountSlug
                campaignSlug:(NSString*) campaignSlug
                advocateToken:(NSString*) advocateToken
                from:(NSDate*) from
                to:(NSDate*) to
                completionBlock:(CompletedGetClickDailyParticipation) onCompleted;

/**
* Completion block definition for asynchronous call to Get Bonuses Daily Given */
typedef void (^CompletedGetBonusesDailyGiven)(BOOL success, HttpContext* context, id response, NSError* error);

/**
* Get bonuses daily given.
* @param    accountSlug    Optional parameter: The account identifier
* @param    campaignSlug    Optional parameter: The campaign identifier
* @param    advocateToken    Optional parameter: The advocate identifier
* @param    from    Optional parameter: The datetime were the range of the search starts
* @param    to    Optional parameter: The datetime were the range of the search stops
*/
- (void) getBonusesDailyGivenAsyncWithAccountSlug:(NSString*) accountSlug
                campaignSlug:(NSString*) campaignSlug
                advocateToken:(NSString*) advocateToken
                from:(NSDate*) from
                to:(NSDate*) to
                completionBlock:(CompletedGetBonusesDailyGiven) onCompleted;

@end